name: Continuous Integration

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies for canvas
        run: sudo apt-get install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.0'

      - name: Install dependencies
        run: npm install

      - name: Ensure node-pre-gyp has correct permissions
        run: chmod +x ./node_modules/.bin/node-pre-gyp

      - name: Rebuild canvas
        run: npm rebuild canvas

      - name: List files in directory
        run: ls -l ./node_modules/.bin

      - name: Set permissions for wdio
        run: chmod +x ./node_modules/.bin/wdio

      - name: Set permissions for allure
        run: chmod +x ./node_modules/.bin/allure

      - name: Install Chrome browser
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install ChromeDriver
        run: |
          sudo apt-get install -y unzip
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
          CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_$MAJOR_VERSION)
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d /usr/local/bin/
          rm chromedriver_linux64.zip

      - name: Running E2E tests
        run: |
          retries=3
          delay=15
          for i in $(seq 1 $retries); do
            NODE_OPTIONS="--unhandled-rejections=strict" npx wdio run ./wdio.conf.ts --spec ./test/specs/makemytrip/*.ts && break || {
              echo "Attempt $i failed! Trying again in $delay seconds..."
              sleep $delay
            }
          done

      - name: Generate Allure report
        run: npx allure generate --clean

      - name: Publish Allure report
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: allure-report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
